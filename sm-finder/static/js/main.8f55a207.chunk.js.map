{"version":3,"sources":["components/Button.js","components/Card.js","components/Navbar.js","components/Search.js","components/Switch.js","components/Home.js","components/StoryDetails.js","App.js","serviceWorker.js","index.js"],"names":["StoryButton","console","log","this","props","id","react_default","a","createElement","className","Button","href","tag","role","alt","rel","target","children","React","Component","StoryCard","isToggled","buttonHref","concat","Card","Img","variant","src","react_router_dom","to","xmlns","viewBox","d","Body","Title","title","data-toogle","data-placement","owner","Text","snippet","src_components_Button","Navigation","Navbar","bg","Brand","width","height","SearchBox","class","value","query","placeholder","onChange","handleSearchChange","autoComplete","Switch","isOn","type","aria-checked","checked","onToggle","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","e","setState","toggle","state","error","isLoaded","items","_this2","fetch","then","response","json","data","total","search","current","results","_this3","_this$state","message","src_components_Navbar","components_Search","src_components_Switch","filter","item","toLowerCase","includes","map","src_components_Card","key","thumbnail","url","StoryDetails","App","react_router","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8f55a207.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport \"./Button.css\";\r\n\r\nclass StoryButton extends React.Component {\r\n  render() {\r\n    console.log(\"HI\");\r\n    console.log(this.props.id);\r\n    //TODO Replace button color with #00bab5 for branding\r\n    return (\r\n      <div className=\"button-center\">\r\n        <Button\r\n          href={this.props.href}\r\n          tag=\"a\"\r\n          className=\"btn-btn-info\"\r\n          role=\"button\"\r\n          alt=\"story url\"\r\n          rel=\"noopener noreferrer\"\r\n          target=\"_blank\"\r\n        >\r\n          {this.props.children}\r\n        </Button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default StoryButton;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport StoryButton from \"./Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Card.css\";\r\n//import StoryInfo from \"./Info.js\";\r\n\r\nclass StoryCard extends React.Component {\r\n  render() {\r\n    //if toggled on or off, creates different button href\r\n    console.log(this.props.isToggled);\r\n    const buttonHref = this.props.isToggled\r\n      ? `https://storymaps2qa.arcgis.com/stories/${this.props.id}`\r\n      : this.props.href;\r\n    console.log(buttonHref);\r\n    return (\r\n      <Card>\r\n        <Card.Img variant=\"top\" src={this.props.src} alt=\"thumbnail\" />\r\n        <Link to={`/info/${this.props.id}`}>\r\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\r\n            <path d=\"M15.5 1A14.5 14.5 0 1 0 30 15.5 14.517 14.517 0 0 0 15.5 1zm0 28A13.5 13.5 0 1 1 29 15.5 13.515 13.515 0 0 1 15.5 29zm1.5-6h-3v-1h1V11h1v11h1zM15.5 8.5a1 1 0 1 1 1-1 1.002 1.002 0 0 1-1 1zM16 12h-2v-1h2z\" />\r\n          </svg>\r\n          Story details\r\n        </Link>\r\n        <Card.Body>\r\n          <div>\r\n            <Card.Title\r\n              id={this.props.id}\r\n              href={this.props.title}\r\n              data-toogle=\"tooltip\"\r\n              data-placement=\"top\"\r\n              title={this.props.title}\r\n              alt=\"story title\"\r\n            >\r\n              {this.props.title}\r\n            </Card.Title>\r\n            <a\r\n              href={`https://www.arcgis.com/home/user.html?user=${\r\n                this.props.owner\r\n              }`}\r\n              tag=\"a\"\r\n              alt=\"view author profile\"\r\n              rel=\"noopener noreferrer\"\r\n              target=\"_blank\"\r\n            >\r\n              {this.props.owner}\r\n            </a>\r\n            <Card.Text>{this.props.snippet}</Card.Text>\r\n          </div>\r\n          <StoryButton href={buttonHref}>Read story</StoryButton>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StoryCard;\r\n","import React from \"react\";\r\n//import { Navbar } from \"react-bootstrap/Navbar\";\r\nimport { Navbar } from \"react-bootstrap\";\r\nimport \"./Navbar.css\";\r\n\r\nclass Navigation extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar bg=\"light\">\r\n        <Navbar.Brand href=\"https://storymaps.arcgis.com\">\r\n          <img\r\n            src=\"story-maps-logo.png\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            className=\"d-inline-block align-top\"\r\n            alt=\"ArcGIS StoryMaps logo\"\r\n          />\r\n          {\" ArcGIS StoryMaps\"}\r\n        </Navbar.Brand>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport \"./Search.css\";\r\n\r\nfunction SearchBox(props) {\r\n  console.log(props);\r\n  return (\r\n    <div>\r\n      <span class=\"icon-search\">\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\r\n          <path d=\"M28.996 28.29l-9.454-9.456.268-.268a9.5 9.5 0 1 0-1.244 1.244l.268-.268 9.455 9.454zM6.42 18.581a8.6 8.6 0 1 1 12.162 0 8.6 8.6 0 0 1-12.162 0z\" />\r\n        </svg>\r\n        <input\r\n          value={props.query}\r\n          placeholder=\"Search stories\"\r\n          onChange={props.handleSearchChange}\r\n          autoComplete=\"on\"\r\n        />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n// function SearchBox(props) {\r\n//   console.log(props);\r\n//   return (\r\n//     <div className=\"wrapper\">\r\n//       <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 32 32\">\r\n//         <path d=\"M28.996 28.29l-9.454-9.456.268-.268a9.5 9.5 0 1 0-1.244 1.244l.268-.268 9.455 9.454zM6.42 18.581a8.6 8.6 0 1 1 12.162 0 8.6 8.6 0 0 1-12.162 0z\" />\r\n//       </svg>\r\n\r\n//       <input\r\n//         value={props.query}\r\n//         placeholder=\"Search stories\"\r\n//         onChange={props.handleSearchChange}\r\n//         autoComplete=\"on\"\r\n//       />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\nexport default SearchBox;\r\n// let SearchBox = React.createClass({\r\n\r\n//   doSearch:function() {\r\n//   let query = this.refs.searchInput.value;\r\n//     this.props.doSearch(query);\r\n//   },\r\n\r\n//     render: function() {\r\n\r\n//       return (\r\n//       <input type=\"text\"\r\n\r\n//         ref=\"searchInput\"\r\n//         placeholder=\"Search stories\"\r\n//         value={this.props.query}\r\n//         onChange={this.doSearch}\r\n//         autocomplete=\"on\"\r\n//       />\r\n//       )}\r\n\r\n// });\r\n\r\n// class StorySearch extends React.Component {\r\n//   render() {\r\n//     return (\r\n//       <input\r\n//         id=\"story-search\"\r\n//         required\r\n//         placeholder=\"Search my stories\"\r\n//         autocomplete=\"on\"\r\n//       />\r\n//     );\r\n//   }\r\n// }\r\n\r\n// export default StorySearch;\r\n","import React from \"react\";\r\nimport \"./Switch.css\";\r\n//import PropTypes from \"prop-types\";\r\n\r\n// PropTypes: {\r\n//   isOn: boolean;\r\n//   onToggle: (value: boolean) => void;\r\n// }\r\n\r\nclass Switch extends React.Component {\r\n  render() {\r\n    const { isOn } = this.props;\r\n    return (\r\n      <label className=\"labeled-switch\">\r\n        Browse with QA\r\n        <input\r\n          className=\"switch-checkbox\"\r\n          type=\"checkbox\"\r\n          aria-checked={isOn}\r\n          checked={isOn}\r\n          onChange={this.props.onToggle}\r\n        />\r\n      </label>\r\n    );\r\n  }\r\n  // private onToggle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n  //   this.props.onToggle(event.target.checked);\r\n  // };\r\n}\r\n\r\nexport default Switch;\r\n","import React from \"react\";\r\nimport StoryCard from \"./Card.js\";\r\nimport Navigation from \"./Navbar.js\";\r\nimport SearchBox from \"./Search.js\";\r\nimport Switch from \"./Switch.js\";\r\nimport \"./Home.css\";\r\n\r\nclass Home extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      items: [],\r\n      query: \"\",\r\n      toggle: false\r\n    };\r\n  }\r\n\r\n  onToggle = e => {\r\n    console.log(e.target.checked);\r\n    //this.props.isOn = value;\r\n    this.setState({\r\n      toggle: e.target.checked\r\n    });\r\n  };\r\n\r\n  handleSearchChange = e => {\r\n    this.setState({\r\n      query: e.target.value\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    const url = `https://www.arcgis.com/sharing/rest/search?q=type%3Astorymap%20AND%20typekeywords%3A(smstatuspublished)%20AND%20orgid%3A(NOT(dGkWQRTbdsLW3GnN%20AND%204E2kXnaVf5dNC6X0%20AND%20nzS0F0zdNLvs7nc8))&sortorder=desc&sortfield=modified&num=100&f=pjson`;\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(\r\n        data => {\r\n          console.log(data);\r\n          console.log(data.total);\r\n          console.log(\"hi sara\");\r\n          console.log(this.state.search);\r\n\r\n          this.setState({\r\n            isLoaded: true,\r\n            current: data,\r\n            items: data.results,\r\n            total: data.total\r\n          });\r\n        },\r\n        error => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { error, isLoaded, items, total } = this.state;\r\n    console.log(this.state.query);\r\n    console.log(this.handleSearchChange);\r\n    if (error) {\r\n      return <div>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      return <div>Loading...</div>;\r\n    } else {\r\n      console.log(items);\r\n      console.log(this.state.toggle);\r\n      return (\r\n        <div className=\"Home\">\r\n          <Navigation />\r\n          <h1>Story Gallery</h1>\r\n          <SearchBox\r\n            query={this.state.query}\r\n            handleSearchChange={this.handleSearchChange}\r\n          />\r\n          <div className=\"story-count\">Total stories: {total}</div>\r\n          <br />\r\n          <Switch onToggle={this.onToggle}>Toggle to append url</Switch>\r\n          <div className=\"grid-container\">\r\n            {items\r\n              .filter(item => {\r\n                console.log(item);\r\n                if (\r\n                  item.title &&\r\n                  item.title\r\n                    .toLowerCase()\r\n                    .includes(this.state.query.toLowerCase())\r\n                )\r\n                  return true;\r\n                //Only continue if snippet exists\r\n                if (\r\n                  item.snippet &&\r\n                  //item.snippet.toLowerCase() &&\r\n                  item.snippet\r\n                    .toLowerCase()\r\n                    .includes(this.state.query.toLowerCase())\r\n                )\r\n                  return true;\r\n                return false;\r\n              })\r\n              .map(item => (\r\n                <StoryCard\r\n                  key={item.id}\r\n                  src={`https://www.arcgis.com/sharing/rest/content/items/${\r\n                    item.id\r\n                  }/info/${item.thumbnail}`}\r\n                  id={item.id}\r\n                  title={item.title}\r\n                  owner={item.owner}\r\n                  snippet={item.snippet}\r\n                  href={item.url}\r\n                  isToggled={this.state.toggle}\r\n                />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nclass StoryDetails extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>What up analytics</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StoryDetails;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home.js\";\r\nimport StoryDetails from \"./components/StoryDetails.js\";\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <div className=\"App\">\r\n          <Switch>\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route path={`/items/${this.props.id}`} component={StoryDetails} />\r\n            {/* <Redirect to=\"/\" /> */}\r\n            {/* <Route>\r\n              <h1>Sorry, page not found</h1>\r\n            </Route> */}\r\n          </Switch>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport $ from \"jquery\";\r\nimport Popper from \"popper.js\";\r\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}